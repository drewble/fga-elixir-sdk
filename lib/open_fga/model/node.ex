# NOTE: This file is auto generated by OpenAPI Generator 7.10.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule OpenFGA.Model.Node do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :name,
    :leaf,
    :difference,
    :union,
    :intersection
  ]

  @type t :: %__MODULE__{
    :name => String.t,
    :leaf => OpenFGA.Model.Leaf.t | nil,
    :difference => OpenFGA.Model.UsersetTreeDifference.t | nil,
    :union => OpenFGA.Model.Nodes.t | nil,
    :intersection => OpenFGA.Model.Nodes.t | nil
  }

  alias OpenFGA.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:leaf, :struct, OpenFGA.Model.Leaf)
     |> Deserializer.deserialize(:difference, :struct, OpenFGA.Model.UsersetTreeDifference)
     |> Deserializer.deserialize(:union, :struct, OpenFGA.Model.Nodes)
     |> Deserializer.deserialize(:intersection, :struct, OpenFGA.Model.Nodes)
  end
end

