# NOTE: This file is auto generated by OpenAPI Generator 7.10.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule OpenFGA.Model.Userset do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :this,
    :computedUserset,
    :tupleToUserset,
    :union,
    :intersection,
    :difference
  ]

  @type t :: %__MODULE__{
    :this => map() | nil,
    :computedUserset => OpenFGA.Model.ObjectRelation.t | nil,
    :tupleToUserset => OpenFGA.Model.TupleToUserset.t | nil,
    :union => OpenFGA.Model.Usersets.t | nil,
    :intersection => OpenFGA.Model.Usersets.t | nil,
    :difference => OpenFGA.Model.Difference.t | nil
  }

  alias OpenFGA.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:computedUserset, :struct, OpenFGA.Model.ObjectRelation)
     |> Deserializer.deserialize(:tupleToUserset, :struct, OpenFGA.Model.TupleToUserset)
     |> Deserializer.deserialize(:union, :struct, OpenFGA.Model.Usersets)
     |> Deserializer.deserialize(:intersection, :struct, OpenFGA.Model.Usersets)
     |> Deserializer.deserialize(:difference, :struct, OpenFGA.Model.Difference)
  end
end

