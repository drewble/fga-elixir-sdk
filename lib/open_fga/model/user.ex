# NOTE: This file is auto generated by OpenAPI Generator 7.10.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule OpenFGA.Model.User do
  @moduledoc """
  User.  Represents any possible value for a user (subject or principal). Can be a: - Specific user object e.g.: 'user:will', 'folder:marketing', 'org:contoso', ...) - Specific userset (e.g. 'group:engineering#member') - Public-typed wildcard (e.g. 'user:*')  See https://openfga.dev/docs/concepts#what-is-a-user
  """

  @derive Jason.Encoder
  defstruct [
    :object,
    :userset,
    :wildcard
  ]

  @type t :: %__MODULE__{
    :object => OpenFGA.Model.FgaObject.t | nil,
    :userset => OpenFGA.Model.UsersetUser.t | nil,
    :wildcard => OpenFGA.Model.TypedWildcard.t | nil
  }

  alias OpenFGA.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:object, :struct, OpenFGA.Model.FgaObject)
     |> Deserializer.deserialize(:userset, :struct, OpenFGA.Model.UsersetUser)
     |> Deserializer.deserialize(:wildcard, :struct, OpenFGA.Model.TypedWildcard)
  end
end

